{"ast":null,"code":"var _jsxFileName = \"/Users/martin.bjorn/bsf/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [text, setText] = useState('Click the button to get a text');\n  const fetchText = async randomNumber => {\n    try {\n      const response = await fetch(`http://localhost:3001/get-text?number=${randomNumber}`);\n      const data = await response.json();\n      setText(data.text);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setText('Error fetching data');\n    }\n  };\n  const handleClick = () => {\n    const randomNumber = Math.floor(Math.random() * 20) + 1;\n    fetchText(randomNumber);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Generate Random Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"VD12xc8O4AdbJfgJyG28+mjCyJc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","text","setText","fetchText","randomNumber","response","fetch","data","json","error","console","handleClick","Math","floor","random","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/martin.bjorn/bsf/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [text, setText] = useState('Click the button to get a text');\n\n  const fetchText = async (randomNumber) => {\n    try {\n      const response = await fetch(`http://localhost:3001/get-text?number=${randomNumber}`);\n      const data = await response.json();\n      setText(data.text);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setText('Error fetching data');\n    }\n  };\n\n  const handleClick = () => {\n    const randomNumber = Math.floor(Math.random() * 20) + 1;\n    fetchText(randomNumber);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <button onClick={handleClick}>Generate Random Number</button>\n        <p>{text}</p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,gCAAgC,CAAC;EAElE,MAAMO,SAAS,GAAG,MAAOC,YAAY,IAAK;IACxC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyCF,YAAY,EAAE,CAAC;MACrF,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCN,OAAO,CAACK,IAAI,CAACN,IAAI,CAAC;IACpB,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CP,OAAO,CAAC,qBAAqB,CAAC;IAChC;EACF,CAAC;EAED,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMP,YAAY,GAAGQ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC;IACvDX,SAAS,CAACC,YAAY,CAAC;EACzB,CAAC;EAED,oBACEN,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBlB,OAAA;MAAQiB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5BlB,OAAA;QAAQmB,OAAO,EAAEN,WAAY;QAAAK,QAAA,EAAC;MAAsB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC7DvB,OAAA;QAAAkB,QAAA,EAAIf;MAAI;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACrB,EAAA,CA3BQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AA6BZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}